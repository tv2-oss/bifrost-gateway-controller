name: Test PR

on:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Run tests
        run: |
          make test

      # Build release manifests - not to release these, but to force a failure
      # below if repo does not already contain updated manifests
      - name: Verify release manifests without changes
        run: |
          rm -rf config/release
          make manifest-build
          git status --porcelain
          if [[ -z `git status --porcelain` ]]; then echo "No repo changes"; else echo "Repo have unexpected changes"; exit 1; fi

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          cache: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
          args: --timeout 3m --verbose

  # This is PR builds but does not push to a registry
  build-pr:
    runs-on: ubuntu-latest
    needs: ["tests", "golangci"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"
          cache: true

      # Use goreleaser snapshot builds for PR builds to avoid duplication
      # This is a bit convoluted - see also goreleaser nightly builds feature

      - name: Downcase repository if it has upper case chars
        run: |
          echo "REGISTRY=ghcr.io/${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Get SHA that triggered PR
        run: |
          echo -n "HEAD_SHA=" >>${GITHUB_ENV}
          git rev-parse --short "${{ github.event.pull_request.head.sha }}" >>${GITHUB_ENV}

      - name: Make PR build
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean --snapshot

      - name: List PR images
        run: |
          docker image ls --format "{{.Repository}}:{{.Tag}}" | \
            grep -ie "${{ github.repository}}:.*${HEAD_SHA}.*"
